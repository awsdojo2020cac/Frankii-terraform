openapi: "3.0.0"
info:
  title: ${title}
  version: "1.0.0"
  description: "Frankii's API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "jlee.yvr96@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
  - name: "Category"
    description: "質問のカテゴリ"
  - name: "Input Template"
    description: "質問者の入力テンプレート"
  - name: "Admin Actions"
    description: "Adminが操作するAPI"
  - name: "Format"
    description: "質問者の文書フォーマット化"

paths:
  /user/question-categories:
    get:
      tags:
        - "Category"
      summary: "登録された質問カテゴリ一覧を取得"
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Category"
      x-amazon-apigateway-integration:
        uri: ${get_question_categories_function_invoke_arn}
        httpMethod: "POST"
        type: "aws_proxy"
    options:
      description: Allow CORS
      responses:
        200:
          $ref: '#/components/responses/cors'
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /user/input-template/{category}:
    get:
      tags:
        - "Input Template"
      summary: "該当カテゴリの質問者入力テンプレート"
      description: "Frankiiを使用する際、質問者が入力するべき項目"
      parameters:
        - in: "path"
          name: "category"
          schema:
            type: string
          required: true
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Template"
      x-amazon-apigateway-integration:
        uri: ${get_input_template_function_invoke_arn}
        httpMethod: "POST"
        type: "aws_proxy"
        request_parameters: {
          "integration.request.path.category":  "method.request.path.category"
        }
    options:
      description: Allow CORS
      responses:
        200:
          $ref: '#/components/responses/cors'
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /admin/template/register:
    post:
      tags:
        - "Admin Actions"
      summary: "テンプレート登録"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullTemplate'
      responses:
        200:
          description: "成功時のレスポンス"
      x-amazon-apigateway-integration:
        uri: ${register_input_template_function_invoke_arn}
        httpMethod: "POST"
        type: "aws_proxy"
        request_parameters:
          "integration.request.body.category":  "method.request.body.category"
          "integration.request.body.displayText":  "method.request.body.displayText"
          "integration.request.body.description":  "method.request.body.description"
          "integration.request.body.blocks":  "method.request.body.blocks"
    options:
      description: Allow CORS
      responses:
        200:
          $ref: '#/components/responses/cors'
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: "{ \"statusCode\": 200 }"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'POST'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Origin: "'*'"

  /user/format:
    post:
      tags:
        - "Format"
      description: ""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          description: "成功時のレスポンス"
          content:
            application/json:
              schema:
                type: "string"
                example: "success"
      x-amazon-apigateway-integration:
        uri: ${get_question_categories_function_invoke_arn}
        httpMethod: "POST"
        type: "aws_proxy"

  /admin/template/delete:
    post:
      tags:
        - "Admin Actions"
      summary: "テンプレート削除"
      description: "todo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "array"
              items:
                type: "object"
                properties:
                  category:
                    type: "string"
                    description: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: "string"
                example: "success"
      x-amazon-apigateway-integration:
        uri: ${get_question_categories_function_invoke_arn}
        httpMethod: "POST"
        type: "aws_proxy"

components:
  schemas:
    Category:
      type: "object"
      properties:
        category:
          type: "string"
          description: ""
        displayText:
          type: "string"
          description: "表示用テキスト"
        description:
          type: "string"
          description: "説明"
    Template:
      type: "object"
      properties:
        category:
          type: "string"
        blocks:
          type: "array"
          items:
            $ref: "#/components/schemas/TemplateBlock"
    FullTemplate:
      type: "object"
      properties:
        category:
          type: "string"
        displayText:
          type: "string"
          description: "表示用テキスト"
        description:
          type: "string"
          description: "説明"
        blocks:
          type: "array"
          items:
             $ref: "#/components/schemas/TemplateBlock"
        template:
          type: "array"
          items:
            type: "string"
    TemplateBlock:
      type: "object"
      description: "テンプレート内、１つのの入力項目。テキストボックスとドロップダウン2種類を想定している"
      properties:
        blockId:
          type: "integer"
          description: "IDの昇順でBlockが表示される"
        key:
          type: "string"
        label:
          type: "string"
        multiline:
          type: "boolean"
          nullable: true
          description: "typeはSELECTの場合、trueはmultilineのテキストボックスになる"
    DropdownOptions:
      type: "object"
      description: "ドロップダウンの項目"
      properties:
        text:
          type: "string"
          description: "表示されるテキスト（例：エラー）"
        value:
          type: "string"
          description: "例：error"
  responses:
    cors:
      description: "200 response"
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: "string"
        Access-Control-Allow-Methods:
          schema:
            type: "string"
        Access-Control-Max-Age:
          schema:
            type: "string"
        Access-Control-Allow-Headers:
          schema:
            type: "string"
      content:
        application/json:
          schema:
            type: string

externalDocs:
  description: "Find out more about Frankii"
  url: "https://angel-dojo-cac.atlassian.net/wiki/spaces/ADCAC/overview?homepageId=33179"